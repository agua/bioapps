#!/usr/bin/perl -w

use FindBin qw($Bin);

#### MOVE TO THIS DIRECTORY
chdir($Bin);

#### GET TEST FILES
my $testfiles;
@$testfiles = split " ", `find \. -type f -name \*\.t`;

#### GENERATE MAKEFILE COMMANDS
my $datetime = `date`;
my $script = $0;
$script =~ s/^\.\///;
my $output = "#$datetime# THIS MAKEFILE WAS GENERATED BY $Bin/$script\n\n";
$output .= "all:\n";
foreach my $testfile ( @$testfiles ) {
	$output .= setTarget($testfile, 0);
	#last;
}

$output .= "\nverbose:\n";
foreach my $testfile ( @$testfiles ) {	
	$output .= setTarget($testfile, 1);
	#last;
}

#### SET clean TARGETS
#clean:
#	find . -name '*~' -exec rm -f \{\} \;
$output .= "\nclean:\n";
$output .= qq{#	find . -name '*~' -exec rm -f \{\} \;\n};
#print "output: $output\n";


#### PRINT TO MAKEFILE
my $outputfile = "$Bin/Makefile";
open(OUT, ">$outputfile") or die "Can't open outputfile: $outputfile\n";
print OUT $output;
close(OUT) or die "Can't close outputfile: $outputfile\n";


sub setTarget {
	my $testfile 	=	shift;
	my $verbose		=	shift;
	
	my ($targetdir) = $testfile =~ /^(.+?)\/[^\/]+$/;
	my $check = $testfile;
	my $matches = ($check =~ s/\///g);
	my $downdirs = ".";
	$downdirs = "../" x ($matches - 1) if $matches > 1;
	$downdirs =~ s/\/$//;
	return qq{\tcd $targetdir; perl -MTest::Harness -e '\$\$Test::Harness::verbose=$verbose; runtests \@ARGV;' *.t; cd $downdirs\n};
}